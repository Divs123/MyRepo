import { Pipe } from '@angular/core';
import { isNumberFinite, isUndefined, applyPrecision } from '../helpers/helpers';
var BytesPipe = (function () {
    function BytesPipe() {
        this.dictionary = [
            { max: 1024, type: 'B' },
            { max: 1048576, type: 'KB' },
            { max: 1073741824, type: 'MB' },
            { max: 1.0995116e12, type: 'GB' }
        ];
    }
    BytesPipe.prototype.transform = function (value, precision) {
        if (!isNumberFinite(value)) {
            return NaN;
        }
        var format = this.dictionary.find(function (d) { return value < d.max; }) || this.dictionary[this.dictionary.length - 1];
        var calc = value / (format.max / 1024);
        var num = isUndefined(precision) ? calc : applyPrecision(calc, precision);
        return num + " " + format.type;
    };
    return BytesPipe;
}());
export { BytesPipe };
BytesPipe.decorators = [
    { type: Pipe, args: [{ name: 'bytes' },] },
];
/** @nocollapse */
BytesPipe.ctorParameters = function () { return []; };
//# sourceMappingURL=bytes.js.map